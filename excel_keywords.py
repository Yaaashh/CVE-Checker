import logging
import re
from typing import List

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def sanitize_keyword(keyword: str) -> str:
    """
    Sanitizes the keyword by removing special characters and excess spaces,
    making it safe for URL query.
    """
    keyword = re.sub(r'[^a-zA-Z0-9\s.-]', '', keyword)  # Remove special characters except spaces, dots, and hyphens
    keyword = re.sub(r'\s+', ' ', keyword)  # Replace multiple spaces with a single space
    return keyword.strip()  # Remove leading and trailing spaces

def get_keywords(file_path: str) -> List[str]:
    """
    Reads a file and returns a sanitized list of keywords, each line as a keyword, stripped of whitespace.
    """
    try:
        with open(file_path, 'r') as file:
            keywords = [sanitize_keyword(line.strip()) for line in file if line.strip()]
        keywords = list(set(keywords))  # Remove duplicates
        if not keywords:
            logging.warning("No keywords found in the file.")
        return keywords
    except FileNotFoundError:
        logging.error(f"File not found: {file_path}")
        return []
    except Exception as e:
        logging.error(f"An error occurred while reading the file: {e}")
        return []

def create_urls(keywords: List[str]) -> List[str]:
    """
    Creates a list of URLs by appending each sanitized keyword to the base URL.
    """
    BASE_URL = "https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword="
    urls = [BASE_URL + sanitize_keyword(keyword) for keyword in keywords if keyword]
    if not urls:
        logging.warning("No URLs created. The keywords list may be empty.")
    return urls
